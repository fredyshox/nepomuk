language: generic
sudo: required
dist: trusty
branches:
  only:
  - master
env:
  global:
  - secure: "IpTnG9wNPHbGToOA41tA3/+pbijU/07VJEPUuRz5Iiogz1H3qY4FGbImoRl8pyWK/2GVuIURo0H2xBdNazuXKxxP8HeA1yURDBinCVxfluIaEcSNrt7gCab8hRfR5k+Rqki9+61ZSzHIoPWz0BxdkULudInmdRMzwCf2B
  - secure: "QgVzxWxrxYEtbwVU97o7nCq92t7+2lmdV0C810F0dX3RDMy07NdULvh8kt4ju0LxGr6fWQrsZ04TkTk/a/8BquQAPf4LAuAwBjShakYrkqzdxEIrfoVTdotQoFXTkvlShFwqtHa4UxyVtXliM38h/DayLhLUTqkGmGCDX
  - MASON_RELEASE=0.10.0
  - CMAKE_VERSION=3.7.1
  - CLANG_FORMAT_VERSION=3.8.1

cache:
  ccache: true
  apt: true
  yarn: true
matrix:
  fast_finish: true
  include:
  - os: linux
    node_js: 6
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - cmake
        - libprotobuf-dev
        - protobuf-compiler
    env: CCOMPILER='gcc-6' CXXCOMPILER='g++-6' BUILD_TYPE=Release NODEBINDINGS=On CHECK_FORMAT=Yes
      NODE_VERSION=6
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
        - cmake
        - libprotobuf-dev
        - protobuf-compiler
    env: CCOMPILER='gcc-5' CXXCOMPILER='g++-5' BUILD_TYPE=Release
  - os: osx
    osx_image: xcode8.2
    node_js: 4
    env: CCOMPILER='clang' CXXCOMPILER='clang++' BUILD_TYPE=Release NODEBINDINGS=On
      NODE_VERSION=4
  - os: osx
    osx_image: xcode8.2
    env: CCOMPILER='clang' CXXCOMPILER='clang++' BUILD_TYPE=Release
  - os: linux
    node_js: 4
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - cmake
        - libprotobuf-dev
        - protobuf-compiler
    env: CCOMPILER='gcc-6' CXXCOMPILER='g++-6' BUILD_TYPE=Debug COVERAGE=ON SANITIZE=On
      NODEBINDINGS=On NODE_VERSION=4
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
        - cmake
        - libprotobuf-dev
        - protobuf-compiler
    env: CCOMPILER='gcc-5' CXXCOMPILER='g++-5' BUILD_TYPE=Debug
  - os: osx
    osx_image: xcode8.2
    node_js: 6
    env: CCOMPILER='clang' CXXCOMPILER='clang++' BUILD_TYPE=Debug SANITIZE=On NODEBINDINGS=On
      NODE_VERSION=6

before_install:
- export CC=${CCOMPILER} CXX=${CXXCOMPILER}
- if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew update && brew install protobuf
  ccache && PATH=$PATH:/usr/local/opt/ccache/libexec; fi
- if [ -n "${NODEBINDINGS}" ];
    then nvm install ${NODE_VERSION} || travis_terminate 1;
    nvm use ${NODE_VERSION} || travis_terminate 1;
    ./scripts/configure-bindings.sh || travis_terminate 1;
  fi
- |
  mkdir ./mason
  curl -sSfL https://github.com/mapbox/mason/archive/v${MASON_RELEASE}.tar.gz | tar --gunzip --extract --strip-components=1 --exclude="*md" --exclude="test*" --directory=./mason || travis_terminate 1
- ./mason/mason install cmake ${CMAKE_VERSION}
- ./mason/mason link cmake ${CMAKE_VERSION}
- export PATH=./mason_packages/.link/bin/:${PATH}
- |
  if [ -n "${CHECK_FORMAT}" ]; then
    ./mason/mason install clang-format ${CLANG_FORMAT_VERSION};
    ./mason/mason link clang-format ${CLANG_FORMAT_VERSION}
    ./scripts/format.sh || travis_terminate 1;
  fi
- export PROJECT_DIRECTORY=$(pwd)
- export BUILD_DIRECTORY=${PROJECT_DIRECTORY}/build/${BUILD_TYPE}
- mkdir -p ${BUILD_DIRECTORY}

install:
- pushd ${BUILD_DIRECTORY}
- cmake ${PROJECT_DIRECTORY} -DCMAKE_BUILD_TYPE=${BUILD_TYPE:-Debug} -DSANITIZE=${SANITIZE:-OFF}
  -DCOVERAGE=${COVERAGE:-OFF} -DNODEBINDINGS=${NODEBINDINGS:-OFF}
- make -j 2
- popd

script:
- |
  pushd ${BUILD_DIRECTORY}
  ctest --verbose
  popd
- |
  if [ -n "${NODEBINDINGS}" ]; then
      if [ -z "${SANITIZE}" ]; then
        pushd ${PROJECT_DIRECTORY}/node/nepomuk;
        npm install;
        npm test || travis_terminate 1;
        popd;
      fi
  fi

after_success:
- |
  if [ -n "${COVERAGE}" ]; then
    bash <(curl -s https://codecov.io/bash)
  fi
- |
  if [ -n "${NODEBINDINGS}" ]; then
    pushd ${PROJECT_DIRECTORY}/node/nepomuk/;
    ${PROJECT_DIRECTORY}/scripts/publish-node-binaries.sh;
    popd;
  fi
